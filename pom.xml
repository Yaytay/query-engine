<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>uk.co.spudsoft</groupId>
  <artifactId>query-engine-parent</artifactId>
  <version>0.0.0</version>
  <name>SpudSoft Query Engine - Parent</name>

  <packaging>pom</packaging>

  <modules>
    <module>query-engine</module>
    <module>query-engine-design-mode</module>
  </modules>

  <licenses>
    <license>
      <name>General Public License 3.0</name>
      <url>https://opensource.org/licenses/GPL-3.0</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>yaytay</id>
      <name>Jim Talbut</name>
      <email>jim-query-engine @ spudsoft.co.uk</email>
    </developer>
  </developers>

  <properties>
    <!-- For production usage JDK must be compatible with GraalVM and must be receiving security updates, effectively meaning the most recent LTS -->
    <jdk.version>21</jdk.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <argLine></argLine>
    <vertx.version>4.5.14</vertx.version>
    <slf4j.version>2.0.17</slf4j.version>
    <junit-jupiter.version>5.12.2</junit-jupiter.version>
    <junit-platform.version>1.12.2</junit-platform.version>
    <testcontainers.version>1.21.0</testcontainers.version>
    <!-- 
      Graal versions are often tied in to JDK versions, cannot upgrade to 24+ until using JDK 22+ 
      See https://github.com/oracle/graal/issues/7651
    -->
    <graalvm.version>23.1.2</graalvm.version>
    <jackson.version>2.19.0</jackson.version>

    <!-- The qe-version property exists so that the design mode project can override it to run with a specific version -->
    <qe-version>${project.version}</qe-version>

    <rootdir>${project.basedir}</rootdir>
  </properties>

  <scm>
    <connection>scm:git@github.com:Yaytay/query-engine.git</connection>
    <developerConnection>scm:git@github.com:Yaytay/query-engine.git</developerConnection>
    <url>https://github.com/Yaytay/query-engine.git</url>
  </scm>

  <build>
    <pluginManagement>
      <plugins>

        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.14.0</version>
          <configuration>
            <source>${jdk.version}</source>
            <target>${jdk.version}</target>
            <encoding>${project.build.sourceEncoding}</encoding>
            <compilerArgs>
              <arg>-Xlint:all</arg>
              <arg>-proc:none</arg>
            </compilerArgs>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>2.18.0</version>
          <executions>
            <execution>
              <id>display-plugin-updates</id>
              <phase>validate</phase>
              <goals>
                <goal>display-plugin-updates</goal>
              </goals>
            </execution>
            <execution>
              <id>display-dependency-updates</id>
              <phase>validate</phase>
              <goals>
                <goal>display-dependency-updates</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>3.5.0</version>
          <executions>
            <execution>
              <id>enforce-versions</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireMavenVersion>
                    <version>3.9.0</version>
                  </requireMavenVersion>
                  <requireJavaVersion>
                    <version>[17.0,22)</version>
                  </requireJavaVersion>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.6.0</version>
          <executions>
            <execution>
              <phase>initialize</phase>
              <id>parse-version</id>
              <goals>
                <goal>parse-version</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>com.google.code.maven-replacer-plugin</groupId>
          <artifactId>replacer</artifactId>
          <version>1.5.3</version>
          <executions>
            <execution>
              <id>replace-version-number</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>replace</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <basedir>${project.basedir}</basedir>
            <includes>
              <include>src/main/java/uk/co/spudsoft/query/main/Version.java</include>
              <include>docs/query-engine-compose.yml</include>
            </includes>
            <preserveDir>true</preserveDir>
            <replacements>
              <replacement>
                <token>MAVEN_PROJECT_NAME = ".*"</token>
                <value>MAVEN_PROJECT_NAME = "${project.name}"</value>
              </replacement>
              <replacement>
                <token>MAVEN_PROJECT_VERSION = ".*"</token>
                <value>MAVEN_PROJECT_VERSION = "${project.version}"</value>
              </replacement>
              <replacement>
                <token>image: ghcr.io/yaytay/query-engine-design-mode:.*</token>
                <value>image: ghcr.io/yaytay/query-engine-design-mode:${project.version}</value>
              </replacement>
            </replacements>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.4.2</version>
          <executions>
            <execution>
              <id>maven-jar-plugin-test-jar</id>
              <goals>
                <goal>test-jar</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                <mainClass>${mainClass}</mainClass>
              </manifest>
              <manifestEntries>
                <Image>${project.artifactId}:${project.version}</Image>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>

        <plugin>
          <groupId>com.github.spotbugs</groupId>
          <artifactId>spotbugs-maven-plugin</artifactId>
          <version>4.9.3.0</version>
          <configuration>
            <fork>true</fork>
            <effort>Max</effort>
            <xmlOutput>true</xmlOutput>
            <excludeFilterFile>${basedir}/../findbugsFilterFile.xml</excludeFilterFile>
            <plugins>
              <plugin>
                <groupId>com.h3xstream.findsecbugs</groupId>
                <artifactId>findsecbugs-plugin</artifactId>
                <version>1.13.0</version>
              </plugin>
            </plugins>
          </configuration>
          <executions>
            <execution>
              <phase>verify</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>3.6.0</version>
          <configuration>
            <configLocation>${rootdir}/checkstyle.xml</configLocation>
            <suppressionsLocation>${rootdir}/checkstyle-suppressions.xml</suppressionsLocation>
            <suppressionsFileExpression>checkstyle.suppressions.file</suppressionsFileExpression>
            <consoleOutput>true</consoleOutput>
            <failsOnError>true</failsOnError>
            <linkXRef>false</linkXRef>
          </configuration>
          <executions>
            <execution>
              <id>validate</id>
              <phase>verify</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>10.23.0</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.5.3</version>
          <configuration>
            <forkCount>1</forkCount>
            <reuseForks>true</reuseForks>
            <argLine>
              @{argLine}
              -Dfile.encoding=UTF-8
              -XX:+UnlockExperimentalVMOptions
              -XX:+EnableJVMCI
              --upgrade-module-path=${project.build.directory}/compiler
              --add-exports org.graalvm.nativeimage/org.graalvm.nativeimage.impl=ALL-UNNAMED
              --add-exports org.graalvm.polyglot/org.graalvm.polyglot.impl=ALL-UNNAMED
              --add-exports org.graalvm.truffle.compiler/com.oracle.truffle.compiler=ALL-UNNAMED
            </argLine>
            <trimStackTrace>false</trimStackTrace>
            <excludes>
              <exclude>**/sandbox/**</exclude>
            </excludes>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>3.5.3</version>
          <executions>
            <execution>
              <goals>
                <goal>integration-test</goal>
              </goals>
            </execution>
            <execution>
              <id>verify</id>
              <phase>verify</phase>
              <goals>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <forkCount>1</forkCount>
            <useModulePath>false</useModulePath>
            <reuseForks>false</reuseForks>
            <argLine>@{argLine} -Dfile.encoding=UTF-8 -XX:+UnlockExperimentalVMOptions -XX:+UseJVMCICompiler --module-path=${compiler.dir} --upgrade-module-path=${compiler.dir}</argLine>
            <argLine>
              @{argLine}
              -Dfile.encoding=UTF-8
              -XX:+UnlockExperimentalVMOptions
              -XX:+EnableJVMCI
              --module-path=${compiler.dir}
              --upgrade-module-path=${project.build.directory}/compiler
              --add-exports org.graalvm.nativeimage/org.graalvm.nativeimage.impl=ALL-UNNAMED
              --add-exports org.graalvm.polyglot/org.graalvm.polyglot.impl=ALL-UNNAMED
              --add-exports org.graalvm.truffle.compiler/com.oracle.truffle.compiler=ALL-UNNAMED
            </argLine>
            <excludes>
              <exclude>**/sandbox/**</exclude>
            </excludes>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.8.13</version>
          <executions>
            <execution>
              <id>jacoco-initialize</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>jacoco-initialize-integration</id>
              <goals>
                <goal>prepare-agent-integration</goal>
              </goals>
            </execution>
            <execution>
              <id>merge</id>
              <phase>verify</phase>
              <goals>
                <goal>merge</goal>
              </goals>
              <configuration>
                <destFile>${project.build.directory}/jacoco-merged.exec</destFile>
                <fileSets>
                  <fileSet>
                    <directory>${project.build.directory}</directory>
                    <includes>
                      <include>*.exec</include>
                    </includes>
                  </fileSet>
                </fileSets>
              </configuration>
            </execution>
            <execution>
              <id>report</id>
              <phase>verify</phase>
              <goals>
                <goal>report</goal>
              </goals>
              <configuration>
                <excludes>
                </excludes>
                <dataFile>${project.build.directory}/jacoco-merged.exec</dataFile>
              </configuration>
            </execution>
            <execution>
              <id>check</id>
              <phase>verify</phase>
              <goals>
                <goal>check</goal>
              </goals>
              <configuration>
                <excludes>
                </excludes>
                <dataFile>${project.build.directory}/jacoco-merged.exec</dataFile>
                <rules>
                  <rule>
                    <element>CLASS</element>
                    <limits>
                      <limit>
                        <counter>LINE</counter>
                        <value>COVEREDRATIO</value>
                        <minimum>0.75</minimum>
                      </limit>
                      <limit>
                        <counter>BRANCH</counter>
                        <value>COVEREDRATIO</value>
                        <minimum>0.75</minimum>
                      </limit>
                    </limits>
                  </rule>
                </rules>
              </configuration>
            </execution>
            <execution>
              <id>jacoco-site</id>
              <phase>post-integration-test</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.owasp</groupId>
          <artifactId>dependency-check-maven</artifactId>
          <version>12.1.0</version>
          <configuration>
            <failBuildOnCVSS>8</failBuildOnCVSS>
            <failOnError>false</failOnError>
            <format>ALL</format>
            <skipTestScope>false</skipTestScope>
            <suppressionFiles>
              dependency-check-supressions.xml
            </suppressionFiles>
            <assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
            <nvdApiKey>${NVD_API_KEY}</nvdApiKey>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.8.1</version>
          <executions>
            <execution>
              <id>copy-dependencies</id>
              <phase>package</phase>
              <goals>
                <goal>copy-dependencies</goal>
              </goals>
              <configuration>
                <includeScope>compile</includeScope>
                <outputDirectory>${project.build.directory}/dependencies</outputDirectory>
              </configuration>
            </execution>
            <execution>
              <id>build-classpath</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>build-classpath</goal>
              </goals>
              <configuration>
                <includeScope>compile</includeScope>
                <fileSeparator>/</fileSeparator>
                <pathSeparator>:</pathSeparator>
                <prefix>dependencies</prefix>
                <outputFile>target/classpath</outputFile>
                <outputProperty>dependencies-class-path</outputProperty>
              </configuration>
            </execution>
            
            <execution>
              <id>copy-graalvm</id>
              <phase>process-resources</phase>
              <goals>
                <goal>copy</goal>
              </goals>
              <configuration>
                <outputDirectory>
                  ${project.build.directory}/compiler
                </outputDirectory>
                <overWriteReleases>true</overWriteReleases>
                <overWriteSnapshots>true</overWriteSnapshots>
                <artifactItems>
                  <!--
                  Unfortunately Maven does not support resolving transitive dependencies
                  here automatically. So the list of dependencies might need to be updated when upgrading
                  to new versions of GraalVM.
                  -->
                  <artifactItem>
                    <groupId>org.graalvm.sdk</groupId>
                    <artifactId>collections</artifactId>
                    <version>${graalvm.version}</version>
                    <type>jar</type>
                    <destFileName>collections.jar</destFileName>
                  </artifactItem>
                  <artifactItem>
                    <groupId>org.graalvm.sdk</groupId>
                    <artifactId>nativeimage</artifactId>
                    <version>${graalvm.version}</version>
                    <type>jar</type>
                    <destFileName>nativeimage.jar</destFileName>
                  </artifactItem>
                  <artifactItem>
                    <groupId>org.graalvm.sdk</groupId>
                    <artifactId>word</artifactId>
                    <version>${graalvm.version}</version>
                    <type>jar</type>
                    <destFileName>word.jar</destFileName>
                  </artifactItem>
                  <artifactItem>
                    <groupId>org.graalvm.truffle</groupId>
                    <artifactId>truffle-compiler</artifactId>
                    <version>${graalvm.version}</version>
                    <type>jar</type>
                    <destFileName>truffle-compiler.jar</destFileName>
                  </artifactItem>
                  <artifactItem>
                    <groupId>org.graalvm.compiler</groupId>
                    <artifactId>compiler</artifactId>
                    <version>${graalvm.version}</version>
                    <type>jar</type>
                    <destFileName>compiler.jar</destFileName>
                  </artifactItem>
                </artifactItems>
              </configuration>
            </execution>            
          </executions>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>2.5.0</version>
          <executions>
            <execution>
              <id>download-licenses</id>
              <goals>
                <goal>download-licenses</goal>
              </goals>
              <configuration>
                <licensesOutputDirectory>${user.home}/.m2/licenses</licensesOutputDirectory>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.11.2</version>
          <executions>
            <execution>
              <id>attach-javadocs</id>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <quiet>true</quiet>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.3.1</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.21.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.9.0</version>
        </plugin>

        <plugin>
          <groupId>org.cyclonedx</groupId>
          <artifactId>cyclonedx-maven-plugin</artifactId>
          <version>2.9.1</version>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>makeBom</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <projectType>library</projectType>
            <schemaVersion>1.4</schemaVersion>
            <includeBomSerialNumber>true</includeBomSerialNumber>
            <includeCompileScope>true</includeCompileScope>
            <includeProvidedScope>true</includeProvidedScope>
            <includeRuntimeScope>true</includeRuntimeScope>
            <includeSystemScope>true</includeSystemScope>
            <includeTestScope>false</includeTestScope>
            <includeLicenseText>false</includeLicenseText>
            <outputReactorProjects>true</outputReactorProjects>
            <outputFormat>json</outputFormat>
            <outputName>${project.artifactId}-${project.version}-cyclonedx.cdx</outputName>
          </configuration>
        </plugin>

        <plugin>
          <groupId>io.fabric8</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>0.46.0</version>
          <executions>
            <execution>
              <phase>install</phase>
              <goals>
                <goal>build</goal>
              </goals>
              <id>build</id>
            </execution>
          </executions>
          <configuration>
            <verbose>true</verbose>
            <imagePullPolicy>IfNotPresent</imagePullPolicy>
            <images>
              <image>
                <alias>${project.artifactId}</alias>
                <name>${project.artifactId}:${project.version}</name>
                <build>
                  <tags>
                    <tag>${project.version}</tag>
                  </tags>
                  <nocache/>
                  <dockerFile>${project.basedir}/src/main/docker/Dockerfile</dockerFile>
                  <contextDir>${project.basedir}/</contextDir>
                  <args>
                    <DEPS>${dependencies-class-path}:${project.build.finalName}.jar</DEPS>
                  </args>
                </build>
              </image>
            </images>
            <dockerHost>${env.DOCKER_HOST}</dockerHost>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>3.1.4</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.21.0</version>
        <configuration>
          <skip>true</skip>
          <skipDeploy>true</skipDeploy>
        </configuration>
      </plugin>
    </plugins>

  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <configuration>
          <failBuildOnCVSS>8</failBuildOnCVSS>
          <failOnError>false</failOnError>
          <format>ALL</format>
          <suppressionFiles>
            dependency-check-supressions.xml
          </suppressionFiles>
          <nvdApiKey>${NVD_API_KEY}</nvdApiKey>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <detectJavaApiLink>false</detectJavaApiLink>
        </configuration>
        <reportSets>
          <reportSet>
            <id>default</id>
            <configuration>
            </configuration>
            <reports>
              <report>javadoc</report>
              <report>test-javadoc</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.13</version>
        <configuration>
          <dataFile>${project.build.directory}/jacoco-merged.exec</dataFile>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
      </plugin>
    </plugins>

  </reporting>

  <profiles>
    <profile>
      <id>ui</id>
    </profile>
  </profiles>
</project>
