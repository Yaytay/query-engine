
# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    tags: [ '*' ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        # we don't know what commit the last tag was
        fetch-depth: 0

    - name: Force fetch of tags
      run: git fetch --tags --force origin 

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'zulu'
        cache: maven

    - name: Set up Maven
      uses: stCarolas/setup-maven@v5
      with:
        maven-version: 3.9.2

    - name: Generate settings.xml for Maven Builds
      uses: whelk-io/maven-settings-xml-action@v22
      with:
        servers: '[{ "id": "github", "username": "yaytay", "password": "${{ secrets.GITHUB_TOKEN }}" }]'
        repositories: '[{"id":"central", "url":"https://repo1.maven.org/maven2"}]'
    
    - name: Build with Maven
      env:
        NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
        JAVA_OPTS: -Djava.security.manager=allow
        MAVEN_OPTS: -Djava.security.manager=allow
      run: mvn -P ui -B clean install site

    - uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }} 
        files: target/site/jacoco/jacoco.xml 
        flags: unittests 
        fail_ci_if_error: false
        verbose: true 

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
          
    - name: Deploy container image
      run: |
        IFS=' ' read -ra PARTS <<< `docker image ls | grep query-engine | grep -v design-mode | grep -v ghcr` && \
        docker tag ${PARTS[2]} ghcr.io/yaytay/${PARTS[0]}:${PARTS[1]} && \
        docker push ghcr.io/yaytay/${PARTS[0]}:${PARTS[1]}
        IFS=' ' read -ra PARTS <<< `docker image ls | grep query-engine-design-mode | grep -v ghcr` && \
        docker tag ${PARTS[2]} ghcr.io/yaytay/${PARTS[0]}:${PARTS[1]} && \
        docker push ghcr.io/yaytay/${PARTS[0]}:${PARTS[1]}
        
    - name: Upload site reports on success
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: reports
        path: |
          query-engine/target/site
          query-engine-design-mode/target/site

    - name: Create release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "query-engine*/target/xlsx-writer*.jar*"
        token: ${{ github.token }} 

    - name: asciidoctor-ghpages
      uses: manoelcampos/asciidoctor-ghpages-action@v2
      with:
        pdf_build: false
        # asciidoctor_params: --attribute=nofooter
        # adoc_file_ext: .ascii # default is .adoc
        source_dir: query-engine/docs/
        # slides_build: true
        # pre_build:
        # post_build: